/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer definitions
#define BASE 0    // ALPHA
#define SYM 1     // SYMBOL PRIMARY
#define EXT 2     // MODIFIERS | MOBILITY
#define FNC 3     // FUNCTIONS
#define NUM 4     // SYMBOL SECONDARY
#define MOV 5     // MOUSE MOVEMENTS


// ----------------------------------------------------------------------------------------------------
// Behaviours 
// ----------------------------------------------------------------------------------------------------

&sk {
	// don't release mods on other mods presses
	ignore-modifiers;
};


/ {
	behaviors {
		// Enables holding the first mod-tap key
		// by performing a tap-release-hold sequence.
		// To use it: "&qt KEYCODE1 KEYCODE2"
		qt: quick_tap {
			compatible = "zmk,behavior-hold-tap";
			label = "QUICK_TAP";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <200>;
			bindings = <&kp>, <&kp>;
		};
	};

	macros {
		// sometimes my device thinks a modifier is being held down
		// pressing all modifiers fixes it.
		unstick: unstick {
			label = "ZM_unstick";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
		};
	};

	combos {
		compatible = "zmk,combos";
  
		// both left thumb keys
		combo_settings {
			timeout-ms = <200>;
			key-positions = <30 31>;
			bindings = <&mo FNC>;
		};
    
		// both right thumb keys
		combo_accent {
			timeout-ms = <200>;
			key-positions = <32 33>;
			bindings = <&mo SYM>;
		};

		// internal-left & external-right thumb keys
		combo_sym2 {
			timeout-ms = <200>;
			key-positions = <31 33>;
			bindings = <&mo MOV>;
		};
	};

// Was in the Combo section
//
//		// left index & middle fingers (home-row)
//		// hold control & space for Adobe workflow
//		combo_ctrl_space {
//			timeout-ms = <200>;
//			key-positions = <12 13>;
//			bindings = <&kp LC(SPACE)>;
//			layers = <BASE>;
//		};


	keymap {
		compatible = "zmk,keymap";
		// Base alpha layer
		default_layer {
			label = "Base";
			bindings = <
//     ╒═════════════╤═════════════╤═════════════╤═════════════╤═════════════╕      ╒═════════════╤═════════════╤═════════════╤═════════════╤═════════════╕ 
			  &kp Q         &kp W         &kp F         &kp P         &kp B                &kp J         &kp L         &kp U         &kp Y         &kp SQT
//     ╞═════════════╪═════════════╪═════════════╪═════════════╪═════════════╡      ╞═════════════╪═════════════╪═════════════╪═════════════╪═════════════╡ 
			  &kp A         &kp R         &kp S         &kp T         &kp G                &kp M         &kp N         &kp E         &kp I         &kp O 
//     ╞═════════════╪═════════════╪═════════════╪═════════════╪═════════════╡      ╞═════════════╪═════════════╪═════════════╪═════════════╪═════════════╡ 
			  &kp Z         &kp X         &kp C         &kp D         &kp V                &kp K         &kp H         &kp COMMA     &kp DOT       &kp SLASH 
//     ╘═════════════╧═════════════╧═════════════╪═════════════╪═════════════╡      ╞═════════════╪═════════════╪═════════════╧═════════════╧═════════════╛ 
	                                                &mo EXT      &mt LSHIFT SPACE      &kt SPACE     &mo NUM
//                                               ╘═════════════╧═════════════╛      ╘═════════════╧═════════════╛ 
			>;
		};

		// Numbers and high frequency symbols
		sym_layer {
			label = "SYM";
			bindings = <
//     ╒═════════════╤═════════════╤═════════════╤═════════════╤═════════════╕      ╒═════════════╤═════════════╤═════════════╤═════════════╤═════════════╕ 
			  &kp EXCL      &kp DQT       &kp LC(N3)    &kp DLLR      &kp PRCNT            &kp EQUAL     &kp GRAVE     &kp COLON     &kp SEMI      &kp PLUS
//     ╞═════════════╪═════════════╪═════════════╪═════════════╪═════════════╡      ╞═════════════╪═════════════╪═════════════╪═════════════╪═════════════╡ 
			  &sk LALT      &sk LGUI      &sk LSHIFT    &sk LCTRL     &sk RALT             &kp STAR      &kp LPAR      &kp LBRC      &kp LBKT      &kp MINUS
//     ╞═════════════╪═════════════╪═════════════╪═════════════╪═════════════╡      ╞═════════════╪═════════════╪═════════════╪═════════════╪═════════════╡ 
			  &kp BSLH      &kp PIPE      &kp HASH      &kp TILDE     &kp AMPS             &kp AT        &kp RPAR      &kp RBRC      &kp RBKT      &kp UNDER
//     ╘═════════════╧═════════════╧═════════════╪═════════════╪═════════════╡      ╞═════════════╪═════════════╪═════════════╧═════════════╧═════════════╛ 
		                                              &kp NUM       &mo EXT              &mo NUM       &none
//                                               ╘═════════════╧═════════════╛      ╘═════════════╧═════════════╛ 
			>;
    };

		// Main modifiers and arrow keys
		ext_layer {
			label = "EXT";
			bindings = <
//     ╒═════════════╤═════════════╤═════════════╤═════════════╤═════════════╕      ╒═════════════╤═════════════╤═════════════╤═════════════╤═════════════╕ 
			  &kp ESC       &none         &none         &none         &kp INS              &kp PG_UP     &kp HOME      &kp UP        &kp END       &kp CAPS 
//     ╞═════════════╪═════════════╪═════════════╪═════════════╪═════════════╡      ╞═════════════╪═════════════╪═════════════╪═════════════╪═════════════╡ 
			  &sk LALT      &sk LGUI      &sk LSHIFT    &sk LCTRL     &sk RALT             &kp PG_DN     &kp LEFT      &kp DOWN      &kp RIGHT     &kp DEL 
//     ╞═════════════╪═════════════╪═════════════╪═════════════╪═════════════╡      ╞═════════════╪═════════════╪═════════════╪═════════════╪═════════════╡ 
			  &kp LC(Z)     &kp LC(X)     &kp LC(C)     &kp TAB       &kp LC(V)            &kp LC(BSPC)  &kp BSPC      &none         &none         &kp PSCRN
//     ╘═════════════╧═════════════╧═════════════╪═════════════╪═════════════╡      ╞═════════════╪═════════════╪═════════════╧═════════════╧═════════════╛ 
		                                              &none         &none                &kp ENTER     &mo SYM
//                                               ╘═════════════╧═════════════╛      ╘═════════════╧═════════════╛ 
			>;
		};

		// Function keys with modifiers
		fnc_layer {
			label = "FNC";
			bindings = <
//     ╒═════════════╤═════════════╤═════════════╤═════════════╤═════════════╕      ╒═════════════╤═════════════╤═════════════╤═════════════╤═════════════╕ 
        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &kp C_BRI_UP         &kp F12       &kp F7        &kp F8        &kp F9        &bt BT_CLR 
//     ╞═════════════╪═════════════╪═════════════╪═════════════╪═════════════╡      ╞═════════════╪═════════════╪═════════════╪═════════════╪═════════════╡ 
			  &sk LALT      &sk LGUI      &sk LSHIFT    &sk LCTRL     &kp C_BRI_DN         &kp F11       &kp F4        &kp F5        &kp F6        &kp SLCK
//     ╞═════════════╪═════════════╪═════════════╪═════════════╪═════════════╡      ╞═════════════╪═════════════╪═════════════╪═════════════╪═════════════╡ 
		    &bootloader   &kp C_VOL_UP  &kp C_MUTE    &kp C_VOL_DN  &kp ENTER            &kp F10       &kp F2        &kp F3        &kp F4        &bootloader
//     ╘═════════════╧═════════════╧═════════════╪═════════════╪═════════════╡      ╞═════════════╪═════════════╪═════════════╧═════════════╧═════════════╛ 
		                                              &none         &none                &none         &none
//                                               ╘═════════════╧═════════════╛      ╘═════════════╧═════════════╛ 
			>;
		};

		num_layer {

			label = "NUM";
      bindings = <
//     ╒═════════════╤═════════════╤═════════════╤═════════════╤═════════════╕      ╒═════════════╤═════════════╤═════════════╤═════════════╤═════════════╕ 
        &kp QMARK     &kp LT        &kp GT        &kp AT        &kp LNLCK            &kp EQUAL     &kp N7        &kp N8        &kp N9        &kp PLUS 
//     ╞═════════════╪═════════════╪═════════════╪═════════════╪═════════════╡      ╞═════════════╪═════════════╪═════════════╪═════════════╪═════════════╡ 
			  &sk LALT      &sk LGUI      &sk LSHIFT    &sk LCTRL     &kp RALT             &kp STAR      &kp N4        &kp N5        &kp N6        &kp MINUS
//     ╞═════════════╪═════════════╪═════════════╪═════════════╪═════════════╡      ╞═════════════╪═════════════╪═════════════╪═════════════╪═════════════╡ 
        &kp DOT       &none         &kp TAB       &kp BSPC      &kp ENTER            &kp N0        &kp N1        &kp N2        &kp N3        &kp SLASH
//     ╘═════════════╧═════════════╧═════════════╪═════════════╪═════════════╡      ╞═════════════╪═════════════╪═════════════╧═════════════╧═════════════╛ 
		                                              &none         &none                &none         &none
//                                               ╘═════════════╧═════════════╛      ╘═════════════╧═════════════╛ 
        >;
		};
		

    MOV_layer {
			label = "MOV";
      bindings = <
//     ╒═════════════╤═════════════╤═════════════╤═════════════╤═════════════╕       ╒═════════════╤═════════════╤═════════════╤═════════════╤═════════════╕ 
        &none         &none         &none         &none         &none                 &none         &none         &none         &none         &none 
//     ╞═════════════╪═════════════╪═════════════╪═════════════╪═════════════╡       ╞═════════════╪═════════════╪═════════════╪═════════════╪═════════════╡ 
			  &none         &none         &none         &none         &none                 &none         &none         &none         &none         &none
//     ╞═════════════╪═════════════╪═════════════╪═════════════╪═════════════╡       ╞═════════════╪═════════════╪═════════════╪═════════════╪═════════════╡ 
        &none         &none         &none         &none         &none             &none         &none         &none         &none         &none
//     ╘═════════════╧═════════════╧═════════════╪═════════════╪═════════════╡       ╞═════════════╪═════════════╪═════════════╧═════════════╧═════════════╛ 
		                                              &none         &none                 &none         &none
//                                               ╘═════════════╧═════════════╛       ╘═════════════╧═════════════╛ 
        >;
		};
	};
};
