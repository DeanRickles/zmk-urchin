/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

// TODO:
// * Review and remove unused keys and add missing keys.
// * Write up config on Draw.io
// * Copy config to this file.
// * 

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer definitions
#define BASE 0      // ALPHA
#define SYM 1       // SYMBOL PRIMARY
#define EXT 2       // MODIFIERS | MOBILITY
#define FNC 3       // FUNCTIONS
#define NUM 4      // SYMBOL SECONDARY

// ----------------------------------------------------------------------------------------------------
// Keymap - Variable Keys
// ----------------------------------------------------------------------------------------------------

// --------------------------------------------------
// Base Keymap
// --------------------------------------------------
// LEFT ROW 1
#define L00_01 &kp Q
#define L00_02 &kp W
#define L00_03 &kp F
#define L00_04 &kp P
#define L00_05 &kp B
// RIGHT ROW 1
#define L00_06 &kp J
#define L00_07 &kp L 
#define L00_08 &kp U
#define L00_09 &kp Y
#define L00_10 &kp SINGLE_QUOTE
// LEFT ROW 2
#define L00_11 &kp A
#define L00_12 &kp R
#define L00_13 &kp S
#define L00_14 &kp T
#define L00_15 &kp G
// RIGHT ROW 2
#define L00_16 &kp M
#define L00_17 &kp N
#define L00_18 &kp E
#define L00_19 &kp I
#define L00_20 &kp O
// LEFT ROW 3
#define L00_21 &kp Z
#define L00_22 &kp X
#define L00_23 &kp C
#define L00_24 &kp D
#define L00_25 &kp B
// RIGHT ROW 3
#define L00_26 &kp K
#define L00_27 &kp H
#define L00_28 &kp COMMA
#define L00_29 &kp DOT
#define L00_30 &kp SLASH
// LEFT BOTTOM
#define L00_31 &mo EXT
#define L00_32 &mt LSHIFT SPACE
// RIGHT BOTTOM
#define L00_33 &kp SPACE
#define L00_34 &sl SYM

// --------------------------------------------------
// SYM Keymap
// --------------------------------------------------
// LEFT ROW 1
#define L01_01 &kp EXCLAMATION
#define L01_02 &kp DOUBLE_QUOTES
#define L01_03 &kp LS(N3) // Unsure if POUND exists.
#define L01_04 &kp DOLLAR
#define L01_05 &kp PERCENT
// RIGHT ROW 1
#define L01_06 &kp EQUAL
#define L01_07 &kp GRAVE
#define L01_08 &kp COLON
#define L01_09 &kp SEMICOLON
#define L01_10 &kp PLUS
// LEFT ROW 2
#define L01_11 &sk LALT
#define L01_12 &sk LGUI
#define L01_13 &sk LSHIFT
#define L01_14 &sk LCTRL
#define L01_15 &sk RALT
// RIGHT ROW 2
#define L01_16 &kp ASTERISK
#define L01_17 &kp LPAR
#define L01_18 &kp LBRC
#define L01_19 &kp LBKT
#define L01_20 &kp MINUS
// LEFT ROW 3
#define L01_21 &kp BACKSLASH
#define L01_22 &kp PIPE
#define L01_23 &kp HASH
#define L01_24 &kp TILDE
#define L01_25 &kp AMPERSAND
// RIGHT ROW 3
#define L01_26 &kp AT_SIGN
#define L01_27 &kp RPAR
#define L01_28 &kp RBRC
#define L01_29 &kp RBKT
#define L01_30 &kp UNDERSCORE
// LEFT BOTTOM
#define L01_31 &none
#define L01_32 &mo EXT
// RIGHT BOTTOM
#define L01_33 &mo NUM
#define L01_34 &none

// --------------------------------------------------
// Ext Keymap
// --------------------------------------------------
// LEFT ROW 1
#define L02_01 &kp ESC
#define L02_02 &none
#define L02_03 &none
#define L02_04 &none
#define L02_05 &kp INSERT
// RIGHT ROW 1
#define L02_06 &kp PAGE_UP
#define L02_07 &kp HOME
#define L02_08 &kp UP_ARROW
#define L02_09 &kp END
#define L02_10 &kp CAPSLOCK
// LEFT ROW 2
#define L02_11 &sk LALT
#define L02_12 &sk LGUI
#define L02_13 &sk LSHIFT
#define L02_14 &sk LCTRL
#define L02_15 &sk RALT
// RIGHT ROW 2
#define L02_16 &kp PAGE_DOWN
#define L02_17 &kp LEFT_ARROW
#define L02_18 &kp DOWN_ARROW
#define L02_19 &kp RIGHT_ARROW
#define L02_20 &kp DELETE
// LEFT ROW 3
#define L02_21 &kp LC(Z)        // ctrl+z = undo
#define L02_22 &kp LC(X)        // ctrl+x = cut
#define L02_23 &kp LC(C)        // ctrl+c = Copy
#define L02_24 &kp TAB
#define L02_25 &kp LC(v)        // ctrl+v = Paste
// RIGHT ROW 3
#define L02_26 &kp LC(BACKSPACE)
#define L02_27 &kp BACKSPACE
#define L02_28 &none
#define L02_29 &none
#define L02_30 &kp PRINTSCREEN
// LEFT BOTTOM
#define L02_31 &none
#define L02_32 &none
// RIGHT BOTTOM
#define L02_33 &kp ENTER
#define L02_34 &mo FNC

// --------------------------------------------------
// Fnc Keymap
// --------------------------------------------------
// LEFT ROW 1
#define L03_01 &bt BT_SEL 0
#define L03_02 &bt BT_SEL 1
#define L03_03 &bt BT_SEL 2
#define L03_04 &bt BT_SEL 3
#define L03_05 &kp C_BRIGHTNESS_INC
// RIGHT ROW 1
#define L03_06 &kp F6
#define L03_07 &kp F7
#define L03_08 &kp F8
#define L03_09 &kp F9
#define L03_10 &BT BT_CLR       // Clear BT profile
// LEFT ROW 2
#define L03_11 &sk LALT
#define L03_12 &sk LGUI
#define L03_13 &sk LSHIFT
#define L03_14 &sk LCTRL
#define L03_15 &kp C_BRIGHTNESS_DEC
// RIGHT ROW 2
#define L03_16 &kp F11
#define L03_17 &kp F4
#define L03_18 &kp F5
#define L03_19 &kp F6
#define L03_20 &kp SCROLLLOCK
// LEFT ROW 3
#define L03_21 &BOOTLOADER
#define L03_22 &kp C_VOLUME_DOWN
#define L03_23 &kp C_MUTE
#define L03_24 &kp C_VOLUME_UP
#define L03_25 &kp ENTER
// RIGHT ROW 3
#define L03_26 &kp F10
#define L03_27 &kp F1
#define L03_28 &kp F2
#define L03_29 &kp F3
#define L03_30 &BOOTLOADER
// LEFT BOTTOM
#define L03_31 &none
#define L03_32 &
// RIGHT BOTTOM
#define L03_33 &none
#define L03_34 &none

// --------------------------------------------------
// Num Keymap
// --------------------------------------------------
// LEFT ROW 1 
#define L04_01 &kp QUESTION     // ?
#define L04_02 &kp LESS_THEN    // <
#define L04_03 &kp GREATER_THEN // >
#define L04_04 &kp AT_SIGN
#define L04_05 &kp KP_NUMLOCK
// RIGHT ROW 1
#define L04_06 &kp EQUAL
#define L04_07 &kp N7
#define L04_08 &kp N8
#define L04_09 &kp N9
#define L04_10 &kp PLUS
// LEFT ROW 2
#define L04_11 &sk LALT
#define L04_12 &sk LGUI
#define L04_13 &sk LSHIFT
#define L04_14 &sk LCTRL
#define L04_15 &sk RALT
// RIGHT ROW 2
#define L04_16 &kp ASTERISK
#define L04_17 &kp N4
#define L04_18 &kp N5
#define L04_19 &kp N6
#define L04_20 &kp MINUS
// LEFT ROW 3
#define L04_21 &none
#define L04_22 &none
#define L04_23 &kp TAB
#define L04_24 &kp BACKSPACE
#define L04_25 &kp ENTER
// RIGHT ROW 3
#define L04_26 &kp N0
#define L04_27 &kp N1
#define L04_28 &kp N2
#define L04_29 &kp N3
#define L04_30 &kp SLASH
// LEFT BOTTOM
#define L04_31 &none
#define L04_32 &none
// RIGHT BOTTOM
#define L04_33 &none
#define L04_34 &none

// ----------------------------------------------------------------------------------------------------
// Behaviours 
// ----------------------------------------------------------------------------------------------------

&sk {
	// don't release mods on other mods presses
	ignore-modifiers;
};


/ {
	behaviors {
		// Enables holding the first mod-tap key
		// by performing a tap-release-hold sequence.
		// To use it: "&qt KEYCODE1 KEYCODE2"
		qt: quick_tap {
			compatible = "zmk,behavior-hold-tap";
			label = "QUICK_TAP";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <200>;
			bindings = <&kp>, <&kp>;
		};
	};

	macros {
		// sometimes my device thinks a modifier is being held down
		// pressing all modifiers fixes it.
		unstick: unstick {
			label = "ZM_unstick";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
		};
	};

	combos {
		compatible = "zmk,combos";
		// both right thumb keys
		combo_accent {
			timeout-ms = <200>;
			key-positions = <32 33>;
			bindings = <&mo NUM>;
		};

		// both left thumb keys
		combo_settings {
			timeout-ms = <200>;
			key-positions = <30 31>;
			bindings = <&mo FNC>;
		};

//		// internal-left & external-right thumb keys
//		combo_sym2 {
//			timeout-ms = <200>;
//			key-positions = <31 33>;
//			bindings = <&mo SYM2>;
//		};
//
//		// left index & middle fingers (home-row)
//		// hold control & space for Adobe workflow
//		combo_ctrl_space {
//			timeout-ms = <200>;
//			key-positions = <12 13>;
//			bindings = <&kp LC(SPACE)>;
//			layers = <BASE>;
//		};
	};

// ----------------------------------------------------------------------------------------------------
// VARIABLE KEYMAPS
// ----------------------------------------------------------------------------------------------------

	keymap {
		compatible = "zmk,keymap";
		// Base alpha layer
		default_layer {
			label = "Base";
			bindings = <
			L00_01 L00_02 L00_03 L00_04 L00_05   L00_06 L00_07 L00_08 L00_09 L00_10 
			L00_11 L00_12 L00_13 L00_14 L00_15   L00_16 L00_17 L00_18 L00_19 L00_20 
			L00_21 L00_22 L00_23 L00_24 L00_25   L00_26 L00_27 L00_28 L00_29 L00_30
		                          L00_31 L00_32   L00_33 L00_34
			>;
		};

		// Numbers and high frequency symbols
		sym_layer {
			label = "Sym.";
			bindings = <
			L01_01 L01_02 L01_03 L01_04 L01_05   L01_06 L01_07 L01_08 L01_09 L01_10 
			L01_11 L01_12 L01_13 L01_14 L01_15   L01_16 L01_17 L01_18 L01_19 L01_20 
			L01_21 L01_22 L01_23 L01_24 L01_25   L01_26 L01_27 L01_28 L01_29 L01_30
		                          L01_31 L01_32   L01_33 L01_34
			>;
    };

		// Main modifiers and arrow keys
		ext_layer {
			label = "Mods";
			bindings = <
			L02_01 L02_02 L02_03 L02_04 L02_05   L02_06 L02_07 L02_08 L02_09 L02_10 
			L02_11 L02_12 L02_13 L02_14 L02_15   L02_16 L02_17 L02_18 L02_19 L02_20 
			L02_21 L02_22 L02_23 L02_24 L02_25   L02_26 L02_27 L02_28 L02_29 L02_30
		                          L02_31 L02_32   L02_33 L02_34
			>;
		};

		// Function keys with modifiers
		fnc_layer {
			label = "FRow";
			bindings = <
			L03_01 L03_02 L03_03 L03_04 L03_05   L03_06 L03_07 L03_08 L03_09 L03_10 
			L03_11 L03_12 L03_13 L03_14 L03_15   L03_16 L03_17 L03_18 L03_19 L03_20 
			L03_21 L03_22 L03_23 L03_24 L03_25   L03_26 L03_27 L03_28 L03_29 L03_30
		                          L03_31 L03_32   L03_33 L03_34
			>;
		};

		settings_layer {
				label = "Sett.";
        bindings = <
        L04_01 L04_02 L04_03 L04_04 L04_05   L04_06 L04_07 L04_08 L04_09 L04_10 
        L04_11 L04_12 L04_13 L04_14 L04_15   L04_16 L04_17 L04_18 L04_19 L04_20 
        L04_21 L04_22 L04_23 L04_24 L04_25   L04_26 L04_27 L04_28 L04_29 L04_30
                                L04_31 L04_32   L04_33 L04_34
        >;
//				bindings = <
//				&bootloader &none &none &bt BT_CLR &bt BT_SEL 0               &bt BT_SEL 3 &none &unstick &none &bootloader 
//				&none &none &none &none      &bt BT_SEL 1 						  &bt BT_SEL 4 &none &none &none &none
//				&none &none &none &none      &bt BT_SEL 2               &bt BT_SEL 5 &none &none &none &none
//										&none &none                         &none &none 
//				>;
		};
	};
};
